-- Load Rayfield UI Library
local Rayfield = nil
local RayfieldLoaded, RayfieldError = pcall(function()
    Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
end)

if not RayfieldLoaded then
    warn("Failed to load Rayfield: " .. tostring(RayfieldError))
    return
end

print("Rayfield has been injected.")

-- Create Rayfield Window
local Window = Rayfield:CreateWindow({
    Name = "FURN UniHub",
    Icon = "leaf", -- Icon in Topbar
    LoadingTitle = "Loading...",
    LoadingSubtitle = "Please wait.",
    Theme = ThemeIdentifier, -- Apply theme
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = "Big Hub"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = false
})

-- Main Tab
local MainTab = Window:CreateTab("Main Tools", "user-round")

-- Character Section
local CharacterSection = MainTab:CreateSection("Character")

local player = game.Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hum = char:WaitForChild("Humanoid")
local hrp = char:WaitForChild("HumanoidRootPart")

local SetWalkSpeed = hum.WalkSpeed
local ForceWalkSpeed = false

local function setVars()
    char = player.Character
    hum = char:WaitForChild("Humanoid")
    hrp = char:WaitForChild("HumanoidRootPart")
end

player.CharacterAdded:Connect(setVars)

-- Force Walk Speed Toggle
local ToggleForceWalkSpeed = MainTab:CreateToggle({
    Name = "Force Walk Speed",
    CurrentValue = ForceWalkSpeed,
    Flag = "ToggleForceWalkSpeed",
    Callback = function(Value)
        ForceWalkSpeed = Value
        if ForceWalkSpeed and hum then
            hum.WalkSpeed = SetWalkSpeed
        end
    end
})

-- Walk Speed Slider
local SliderWalkSpeed = MainTab:CreateSlider({
    Name = "Set Walk Speed",
    Range = {16, 250},
    Increment = 1,
    Suffix = "",
    CurrentValue = SetWalkSpeed,
    Flag = "SliderWalkSpeed",
    Callback = function(Value)
        SetWalkSpeed = Value
        if hum then
            hum.WalkSpeed = SetWalkSpeed
        end
    end
})

-- Gravity Slider
local DefaultGravity = workspace.Gravity
local SliderGravity = MainTab:CreateSlider({
    Name = "Gravity",
    Range = {0, 500},
    Increment = 5,
    Suffix = "",
    CurrentValue = DefaultGravity,
    Flag = "SliderGravity",
    Callback = function(Value)
        workspace.Gravity = Value
    end
})

-- Flight Toggle
local flying = false
local flyspeed = 50
local bodyVelocity, bodyGyro = nil, nil

local function toggleFly(Value)
    flying = Value
    if flying then
        bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        bodyVelocity.Parent = hrp

        bodyGyro = Instance.new("BodyGyro")
        bodyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
        bodyGyro.P = 3000
        bodyGyro.Parent = hrp
    else
        if bodyVelocity then bodyVelocity:Destroy() end
        if bodyGyro then bodyGyro:Destroy() end
    end
end

local ToggleFlight = MainTab:CreateToggle({
    Name = "Flight",
    CurrentValue = false,
    Flag = "ToggleFlight",
    Callback = function(Value)
        toggleFly(Value)
    end
})

-- Auto Farm for Build A Boat For Treasure
local BabAutoWinEnabled = false
local ToggleBabAutoWin = MainTab:CreateToggle({
    Name = "Auto Farm",
    CurrentValue = BabAutoWinEnabled,
    Flag = "ToggleBabAutoWin",
    Callback = function(Value)
        BabAutoWinEnabled = Value
        if BabAutoWinEnabled then
            task.spawn(function()
                while BabAutoWinEnabled and hrp do
                    hrp.CFrame = CFrame.new(-51.4020881652832, 42.1522228717803955, 232.0143127441406)
                    task.wait(0.5)
                end
            end)
        end
    end
})

-- Aim Assist
local AimAssistSpeed = 100
local AimRange = 100
local aimbotToggled = false
local aimbotenabled = false

local ToggleAimBot = MainTab:CreateToggle({
    Name = "Aim Bot (RMB)",
    CurrentValue = aimbotToggled,
    Flag = "ToggleAimBot",
    Callback = function(Value)
        aimbotToggled = Value
    end
})

-- Notify Script Loaded
Rayfield:Notify({
    Title = "FURN UniHub",
    Content = "Script has been loaded successfully!",
    Duration = 6.5,
    Image = "shield-check"
})

print("FURN UniHub has fully loaded.")
